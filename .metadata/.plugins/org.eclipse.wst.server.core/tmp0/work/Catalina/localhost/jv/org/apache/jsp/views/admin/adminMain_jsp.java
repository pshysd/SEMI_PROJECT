/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.82
 * Generated at: 2022-11-13 20:51:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class adminMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/views/admin/adminScript.html", Long.valueOf(1667868394000L));
    _jspx_dependants.put("/views/admin/adminSidebar.jsp", Long.valueOf(1667879706000L));
    _jspx_dependants.put("/views/admin/adminTopbar.jsp", Long.valueOf(1667868394000L));
    _jspx_dependants.put("/views/admin/adminPath.jsp", Long.valueOf(1667868394000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
 String contextPath = request.getContextPath(); 
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n");
      out.write("<meta name=\"description\" content=\"\">\r\n");
      out.write("<meta name=\"author\" content=\"\">\r\n");
      out.write("\r\n");
      out.write("<title>JV 관리자 페이지</title>\r\n");
      out.write("\r\n");
      out.write("<!-- JQuery CDN -->\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- chart.js CDN (차트 api) -->\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- swiper.js CDN (이미지 스와이프 api) -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://unpkg.com/swiper/swiper-bundle.min.css\" />\r\n");
      out.write("<!-- <script src=\"https://unpkg.com/swiper/swiper-bundle.min.js\"></script> -->\r\n");
      out.write("\r\n");
      out.write("<!-- 아이콘/글씨체 링크-->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/startbootstrap-sb-admin-2@4.1.4/vendor/fontawesome-free/css/all.min.css\"\r\n");
      out.write("	rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<!-- CSS -->\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/startbootstrap-sb-admin-2@4.1.4/css/sb-admin-2.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("	/* ---------- 전체 스타일 ---------- */\r\n");
      out.write("	/* 영역 사이즈 고정 */\r\n");
      out.write("	.wrapper {\r\n");
      out.write("		width: 1900px;\r\n");
      out.write("		/* 각자 필요한 길이만큼 height 속성값 수정해서 길이 조정 */\r\n");
      out.write("		height: 1050px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 1:1문의 커서 갖다대면 바뀌는거 */\r\n");
      out.write("	.qnaTitle:hover {\r\n");
      out.write("		cursor: pointer;\r\n");
      out.write("		font-weight: bold;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#content-wrapper #accordionSidebar {\r\n");
      out.write("		width: 224px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#content-wrapper {\r\n");
      out.write("		width: 1676px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	#accordionSidebar, #content-wrapper {\r\n");
      out.write("		float: left;\r\n");
      out.write("		height: 100%;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* ----- 추가한 스타일은 여기에 ----- */\r\n");
      out.write("\r\n");
      out.write("	.sales {\r\n");
      out.write("		width: 45%;\r\n");
      out.write("		height: 90%;\r\n");
      out.write("		float:left;\r\n");
      out.write("		margin: 20px;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	.rows{\r\n");
      out.write("		margin-top: 50px;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"wrapper\">\r\n");
      out.write("\r\n");
      out.write("		");
      out.write('\r');
      out.write('\n');
 
	String path = request.getContextPath();
	String alertMsg = (String)session.getAttribute("alertMsg");
	String errorMsg = (String)session.getAttribute("errorMsg");	

      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("	\r\n");
      out.write("		if(\"");
      out.print( alertMsg );
      out.write("\" != \"null\") {\r\n");
      out.write("			alert(\"");
      out.print( alertMsg );
      out.write("\");\r\n");
      out.write("			// 알림창을 띄워준 후 session 에 담긴 해당 메세지를 지워줘야함\r\n");
      out.write("			// 안그러면 menubar.jsp 가 로딩될 때마다 매번 alert 가 계속 뜰 것!!\r\n");
      out.write("			\r\n");
      out.write("			");
 session.removeAttribute("alertMsg"); 
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if(\"");
      out.print( errorMsg );
      out.write("\" != \"null\") {\r\n");
      out.write("			alert(\"");
      out.print( errorMsg );
      out.write("\");\r\n");
      out.write("			");
 session.removeAttribute("errorMsg"); 
      out.write("\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("<!-- 사이드메뉴바 -->\r\n");
      out.write("<ul\r\n");
      out.write("	class=\"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\"\r\n");
      out.write("	id=\"accordionSidebar\">\r\n");
      out.write("\r\n");
      out.write("	<!-- Sidebar - Brand -->\r\n");
      out.write("	<a\r\n");
      out.write("		class=\"sidebar-brand d-flex align-items-center justify-content-center\"\r\n");
      out.write("		href=\"");
      out.print( path );
      out.write("/admin\">\r\n");
      out.write("\r\n");
      out.write("		<div class=\"sidebar-brand-text mx-3\">JV artcenter admin</div>\r\n");
      out.write("	</a>\r\n");
      out.write("	<div class=\"sidebar-brand-icon rotate-n-15\"></div>\r\n");
      out.write("	<!-- Divider -->\r\n");
      out.write("	<hr class=\"sidebar-divider my-0\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- 전시관리 메뉴 -->\r\n");
      out.write("	<li class=\"nav-item\"><a class=\"nav-link collapsed\" href=\"\"\r\n");
      out.write("		data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"true\"\r\n");
      out.write("		aria-controls=\"collapseTwo\"> <i class=\"fas fa-fw fa-cog\"></i> <span>전시관리</span>\r\n");
      out.write("	</a>\r\n");
      out.write("		<div id=\"collapseTwo\" class=\"collapse\" aria-labelledby=\"headingTwo\"\r\n");
      out.write("			data-parent=\"#accordionSidebar\">\r\n");
      out.write("			<div class=\"bg-white py-2 collapse-inner rounded\">\r\n");
      out.write("				<a class=\"collapse-item\" href=\"");
      out.print( path );
      out.write("/admin_list.ex?currentPage=1\">전시 목록</a> <a class=\"collapse-item\"\r\n");
      out.write("					href=\"");
      out.print( path );
      out.write("/admin_enrollForm.ex\">전시 추가</a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div></li>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- 회원관리 메뉴 -->\r\n");
      out.write("	<li class=\"nav-item\"><a class=\"nav-link collapsed\" href=\"\"\r\n");
      out.write("		data-toggle=\"collapse\" data-target=\"#collapseUtilities\"\r\n");
      out.write("		aria-expanded=\"true\" aria-controls=\"collapseUtilities\"> <i\r\n");
      out.write("			class=\"fas fa-fw fa-wrench\"></i> <span>회원관리</span>\r\n");
      out.write("	</a>\r\n");
      out.write("		<div id=\"collapseUtilities\" class=\"collapse\"\r\n");
      out.write("			aria-labelledby=\"headingUtilities\" data-parent=\"#accordionSidebar\">\r\n");
      out.write("			<div class=\"bg-white py-2 collapse-inner rounded\">\r\n");
      out.write("\r\n");
      out.write("				<a class=\"collapse-item\" href=\"");
      out.print( path );
      out.write("/selectmember.admin?currentPage=1\">회원 정보 조회</a>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div></li>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- 서비스관리 메뉴 -->\r\n");
      out.write("	<li class=\"nav-item\"><a class=\"nav-link collapsed\" href=\"\"\r\n");
      out.write("		data-toggle=\"collapse\" data-target=\"#collapsePages\"\r\n");
      out.write("		aria-expanded=\"true\" aria-controls=\"collapsePages\"> <i\r\n");
      out.write("			class=\"fas fa-fw fa-folder\"></i> <span>서비스관리</span>\r\n");
      out.write("	</a>\r\n");
      out.write("		<div id=\"collapsePages\" class=\"collapse\"\r\n");
      out.write("			aria-labelledby=\"headingPages\" data-parent=\"#accordionSidebar\">\r\n");
      out.write("			<div class=\"bg-white py-2 collapse-inner rounded\">\r\n");
      out.write("				<h6 class=\"collapse-header\">Login Screens:</h6>\r\n");
      out.write("				<a class=\"collapse-item\" href=\"");
      out.print( path );
      out.write("/admin_list.no?currentPage=1\">공지사항\r\n");
      out.write("					목록</a> <a class=\"collapse-item\"\r\n");
      out.write("					href=\"");
      out.print( path );
      out.write("/admin_list.news?currentPage=1\">뉴스레터 목록</a> <a\r\n");
      out.write("					class=\"collapse-item\" href=\"");
      out.print( path );
      out.write("/admin_list.qna?currentPage=1\">1대1문의\r\n");
      out.write("					목록</a> <a class=\"collapse-item\" href=\"");
      out.print( path );
      out.write("/admin_list.re?currentPage=1\">리뷰목록</a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div></li>\r\n");
      out.write("\r\n");
      out.write("	<!-- Divider -->\r\n");
      out.write("	<hr class=\"sidebar-divider d-none d-md-block\">\r\n");
      out.write("\r\n");
      out.write("	<!-- Sidebar Toggler (Sidebar) -->\r\n");
      out.write("	<div class=\"text-center d-none d-md-inline\">\r\n");
      out.write("		<button class=\"rounded-circle border-0\" id=\"sidebarToggle\"></button>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("</ul>\r\n");
      out.write("<!-- 사이드메뉴바 끝 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<!-- Content Wrapper -->\r\n");
      out.write("		<div id=\"content-wrapper\" class=\"d-flex flex-column\">\r\n");
      out.write("\r\n");
      out.write("			<!-- content 영역 시작 -->\r\n");
      out.write("			<div id=\"content\">\r\n");
      out.write("\r\n");
      out.write("				");
      out.write("\r\n");
      out.write("<!-- 상단바 -->\r\n");
      out.write("<nav class=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\" id=\"adminTopbar\">\r\n");
      out.write("\r\n");
      out.write("    <!-- Sidebar Toggle (Topbar) -->\r\n");
      out.write("    <button id=\"sidebarToggleTop\" class=\"btn btn-link d-md-none rounded-circle mr-3\">\r\n");
      out.write("        <i class=\"fa fa-bars\"></i>\r\n");
      out.write("    </button>\r\n");
      out.write("\r\n");
      out.write("    <ul class=\"navbar-nav ml-auto\">\r\n");
      out.write("        <div class=\"topbar-divider d-none d-sm-block\"></div>\r\n");
      out.write("\r\n");
      out.write("        <!-- 관리자 아이콘 -->\r\n");
      out.write("        <li class=\"nav-item dropdown no-arrow\">\r\n");
      out.write("            <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"userDropdown\" role=\"button\"\r\n");
      out.write("                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n");
      out.write("                <span class=\"mr-2 d-none d-lg-inline text-gray-600 small\" style=\"margin-right: 30px; font-size: 20px;\"><b>ADMIN</b></span>\r\n");
      out.write("            </a>\r\n");
      out.write("        </li>\r\n");
      out.write("    </ul>\r\n");
      out.write("</nav>\r\n");
      out.write("<!-- 상단바 끝-->");
      out.write("\r\n");
      out.write("				<!-- 오늘 매출, 주간 매출 -->\r\n");
      out.write("				<div id=\"admin_contents\">\r\n");
      out.write("					<div class=\"rows\">\r\n");
      out.write("						<div class=\"sales\">\r\n");
      out.write("							<div>TODAY</div>\r\n");
      out.write("							<div class=\"today\"></div>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"sales\">\r\n");
      out.write("							<div>WEEKS</div>\r\n");
      out.write("							<div class=\"week\">₩</div>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<!-- 두번째 줄 // 월간 매출, 성별별 통계 -->\r\n");
      out.write("					<div class=\"rows\">\r\n");
      out.write("						<div class=\"barChart\">\r\n");
      out.write("							<canvas id=\"perMonth\"></canvas>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"circleChart\">\r\n");
      out.write("							<canvas id=\"gender\"></canvas>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					\r\n");
      out.write("					<!-- chart.js영역 -->\r\n");
      out.write("					<script>\r\n");
      out.write("						$(() => {\r\n");
      out.write("							selectSales();\r\n");
      out.write("							selectSalesPerMonth();\r\n");
      out.write("							reservationsPerGender();\r\n");
      out.write("						})\r\n");
      out.write("\r\n");
      out.write("						//  ------------------------------------------------- 일 매출, 주간 매출 ------------------------------------\r\n");
      out.write("\r\n");
      out.write("						\r\n");
      out.write("						function selectSales(){\r\n");
      out.write("							$.ajax({\r\n");
      out.write("								url : '");
      out.print(contextPath);
      out.write("/sales.st',\r\n");
      out.write("								data : {},\r\n");
      out.write("								type : 'get',\r\n");
      out.write("								success : ((res) => {\r\n");
      out.write("								$('.sales')\r\n");
      out.write("								.eq(0)\r\n");
      out.write("								.children('.today')\r\n");
      out.write("								.html('₩ '+res.todaySales);\r\n");
      out.write("\r\n");
      out.write("								$('.sales')\r\n");
      out.write("								.eq(1)\r\n");
      out.write("								.children('.week')\r\n");
      out.write("								.html('₩ '+ res.weekSales);\r\n");
      out.write("								}),\r\n");
      out.write("								error : () => console.log('매출 통계 데이터 AJAX 통신 중 에러 발생')\r\n");
      out.write("							})\r\n");
      out.write("						}\r\n");
      out.write("\r\n");
      out.write("						\r\n");
      out.write("						//  ------------------------------------------------- 월간 매출 그래프 ------------------------------------						\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("						function selectSalesPerMonth() {\r\n");
      out.write("							$.ajax({\r\n");
      out.write("								url : '");
      out.print(contextPath);
      out.write("/salesPerMon.st',\r\n");
      out.write("								data : {},\r\n");
      out.write("								type : 'get',\r\n");
      out.write("								success : (res) => {\r\n");
      out.write("									\r\n");
      out.write("						const perMonth = new Chart(lineCtx,lineConfig);\r\n");
      out.write("									res.sort((a,b) => a.dateRange - b.dateRange);\r\n");
      out.write("\r\n");
      out.write("									let labels = lineConfig.data.labels;\r\n");
      out.write("									let data = lineConfig.data.datasets[0].data;\r\n");
      out.write("\r\n");
      out.write("									res.forEach(el => {\r\n");
      out.write("										labels.push(el.dateRange)\r\n");
      out.write("										data.push(el.total);\r\n");
      out.write("									})\r\n");
      out.write("								},\r\n");
      out.write("						\r\n");
      out.write("								error : () => console.log('에러발생 삐용삐용')\r\n");
      out.write("							})\r\n");
      out.write("						}\r\n");
      out.write("					\r\n");
      out.write("						//  ------------------------------------------------- 월간 매출 그래프 ------------------------------------											\r\n");
      out.write("					function reservationsPerGender(){\r\n");
      out.write("						$.ajax({\r\n");
      out.write("							url : '");
      out.print(contextPath);
      out.write("/ratePerGen.st',\r\n");
      out.write("							data : {},\r\n");
      out.write("							type : 'get',\r\n");
      out.write("							success : (res) => {\r\n");
      out.write("\r\n");
      out.write("								const labels = circleConfig.data.labels;\r\n");
      out.write("								const data = circleConfig.data.datasets[0].data;\r\n");
      out.write("\r\n");
      out.write("								res.forEach(el => {\r\n");
      out.write("									labels.push(el.label);\r\n");
      out.write("									data.push(el.rate);\r\n");
      out.write("								})\r\n");
      out.write("\r\n");
      out.write("								const perGender = new Chart(circleCtx, circleConfig);\r\n");
      out.write("							},\r\n");
      out.write("							error : () => console.log('성별 통계 AJAX 통신 중 에러발생')\r\n");
      out.write("						})\r\n");
      out.write("					}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					// 바형 그래프\r\n");
      out.write("						var lineCtx = document.getElementById('perMonth').getContext('2d');\r\n");
      out.write("\r\n");
      out.write("						var lineConfig = {\r\n");
      out.write("							type: 'line', // 차트의 형태\r\n");
      out.write("							data: { // 차트에 들어갈 데이터\r\n");
      out.write("										// x축\r\n");
      out.write("								labels: [],\r\n");
      out.write("\r\n");
      out.write("								datasets: [{ //데이터\r\n");
      out.write("												label: '월간 매출 추이', //차트 제목\r\n");
      out.write("												fill: false, // line 형태일 때, 선 안쪽을 채우는지 안채우는지\r\n");
      out.write("												data: [],//x축 label에 대응되는 데이터 값\r\n");
      out.write("												backgroundColor: [\r\n");
      out.write("													//색상\r\n");
      out.write("													'rgba(255, 99, 132, 0.2)'],\r\n");
      out.write("												borderColor: [\r\n");
      out.write("													//경계선 색상\r\n");
      out.write("													'rgba(255, 99, 132, 1)'],\r\n");
      out.write("												//경계선 굵기\r\n");
      out.write("												borderWidth: 2\r\n");
      out.write("											}]\r\n");
      out.write("										},\r\n");
      out.write("										options: {\r\n");
      out.write("											maintainAspectRatio: false,\r\n");
      out.write("											scales: {\r\n");
      out.write("												yAxes: [{\r\n");
      out.write("													ticks: {\r\n");
      out.write("														beginAtZero: true\r\n");
      out.write("													}\r\n");
      out.write("												}]\r\n");
      out.write("											}\r\n");
      out.write("										}\r\n");
      out.write("									};\r\n");
      out.write("						\r\n");
      out.write("						var circleCtx = document.getElementById('gender').getContext('2d');\r\n");
      out.write("\r\n");
      out.write("						var circleConfig = {\r\n");
      out.write("							type: 'doughnut', // 차트의 형태\r\n");
      out.write("							data: { // 차트에 들어갈 데이터\r\n");
      out.write("								labels: [], // x축\r\n");
      out.write("								datasets: [{ //데이터\r\n");
      out.write("									label: '성별별 예매율', //차트 제목\r\n");
      out.write("									data: [],\r\n");
      out.write("									backgroundColor: ['rgba(255, 99, 132, 1)',\r\n");
      out.write("													  'rgba(54, 162, 235, 1)',\r\n");
      out.write("													  'rgba(255, 206, 86, 1)',\r\n");
      out.write("													  'rgba(75, 192, 192, 1)',\r\n");
      out.write("													  'rgba(153, 102, 255, 1)',\r\n");
      out.write("													  'rgba(255, 159, 64, 1)'],\r\n");
      out.write("								borderColor: [	//경계선 색상\r\n");
      out.write("												'rgba(255, 99, 132, 1)',\r\n");
      out.write("												'rgba(54, 162, 235, 1)',\r\n");
      out.write("												'rgba(255, 206, 86, 1)',\r\n");
      out.write("												'rgba(75, 192, 192, 1)',\r\n");
      out.write("												'rgba(153, 102, 255, 1)',\r\n");
      out.write("												'rgba(255, 159, 64, 1)'],\r\n");
      out.write("								borderWidth: 1 //경계선 굵기								\r\n");
      out.write("											}]\r\n");
      out.write("							}, // data 끝\r\n");
      out.write("\r\n");
      out.write("							options: {\r\n");
      out.write("								maintainAspectRatio: false,\r\n");
      out.write("								scales: {\r\n");
      out.write("									yAxes: [{\r\n");
      out.write("										ticks: {beginAtZero: true}\r\n");
      out.write("									}]\r\n");
      out.write("								}\r\n");
      out.write("								} // option 끝\r\n");
      out.write("							};\r\n");
      out.write("\r\n");
      out.write("					</script>\r\n");
      out.write("					<!-- 세번째 줄 // 답변 대기중인 1:1 문의\r\n");
      out.write("						-> 글 제목 클릭 시 상세페이지\r\n");
      out.write("					-->\r\n");
      out.write("					<div class=\"rows\">\r\n");
      out.write("						<table style=\"text-align:center; margin-left:40px;\" class=\"qnaList\">\r\n");
      out.write("							<thead>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<th>글 번호</th>\r\n");
      out.write("									<th>카테고리</th>\r\n");
      out.write("									<th>글 제목</th>\r\n");
      out.write("									<th>작성자</th>\r\n");
      out.write("									<th>날짜</th>\r\n");
      out.write("									<th>답변하기</th>\r\n");
      out.write("								</tr>\r\n");
      out.write("							</thead>\r\n");
      out.write("							<tbody>\r\n");
      out.write("							</tbody>\r\n");
      out.write("						</table>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<script>\r\n");
      out.write("						$(() => {\r\n");
      out.write("							qna;\r\n");
      out.write("						})\r\n");
      out.write("						const tbody = document.querySelector('.qnaList>tbody');\r\n");
      out.write("						let button = \"\"\r\n");
      out.write("						let tr = \"\"\r\n");
      out.write("						let td = \"\"\r\n");
      out.write("							const qna = $.ajax({\r\n");
      out.write("							url : '");
      out.print(contextPath);
      out.write("/admin_main_list.qna',\r\n");
      out.write("							data : [],\r\n");
      out.write("							type : 'get',\r\n");
      out.write("							success : (res) => {\r\n");
      out.write("								res.forEach((el) => {\r\n");
      out.write("									tr = `<tr>`\r\n");
      out.write("										+'<td>'+el.qnaNo+'</td>'\r\n");
      out.write("										+'<td>'+el.qnaCategory+'</td>'\r\n");
      out.write("										+'<td>'+el.qnaTitle+'</td>'\r\n");
      out.write("										+'<td>'+el.memNo+'</td>'\r\n");
      out.write("										+'<td>'+el.qnaDate+'</td>'\r\n");
      out.write("										+'<td><button onclick=location.href=\"");
      out.print(contextPath);
      out.write("/admin_enrollForm.qna?qno='+el.qnaNo+'\">답변하기</button></td>'\r\n");
      out.write("										+'</tr>'\r\n");
      out.write("									tbody.innerHTML+=tr;\r\n");
      out.write("								})\r\n");
      out.write("						},\r\n");
      out.write("							error : () => console.log('1:1문의 AJAX 통신중 문제 발생')\r\n");
      out.write("						})\r\n");
      out.write("\r\n");
      out.write("					</script>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("			<!-- content 영역 끝 -->\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- End of Content Wrapper -->\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	");
      out.write("<!-- Bootstrap core JavaScript-->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/startbootstrap-sb-admin-2@4.1.4/vendor/jquery/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/startbootstrap-sb-admin-2@4.1.4/vendor/bootstrap/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Core plugin JavaScript-->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/startbootstrap-sb-admin-2@4.1.4/vendor/jquery-easing/jquery.easing.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Custom scripts for all pages-->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/startbootstrap-sb-admin-2@4.1.4/js/sb-admin-2.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- Page level plugins -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/startbootstrap-sb-admin-2@4.1.4/vendor/chart.js/Chart.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
